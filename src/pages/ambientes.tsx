import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import { db } from '../services/database'
import { DB } from '../services/databaseClass'
import { useEffect, useState } from 'react'
import { useRouter } from 'next/router'


const inter = Inter({ subsets: ['latin'] })

export default function Ambientes(props: any) {
  const router = useRouter()
  const [ambientes, setAmbientes] = useState(props.ambientes)
  const [inputName, setInputName] = useState('')

  useEffect(() => {
    console.log(router.query)
    setAmbientes(props.ambientes)
    return () => {
      router.query = {}
    }
  }, [])

  const handleDelete = async (id: number) => {
    await fetch(`/api/ambientes/delete/${id}`, {method: "DELETE"})
    router.reload()
  }

  return ambientes && (
    <>
      <Head>
        <title>Ambientes - IFRO</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>

        <div className={styles.center}>
          <Image className={styles.logo} src="/ifro.png" alt="Logo Ifro" width={250} height={220} />
        </div>
        <h1 className={inter.className}>Ambientes</h1>



        <div>
          <form action="/api/ambientes/create" method="post">
            Nome da Ambiente: <input required value={inputName} onChange={(e) => setInputName(e.target.value)} type="text" name="nome" className={`${styles.inputText} ${inter.className}`} /> <input type="submit" value="Salvar" className={styles.btn} />
          </form>
          <div style={{margin:20}}>
            {ambientes.map((e: any, i: number) => (<div key={i} style={{display: "flex"}}><h1>{i+1} - {e.nome}</h1><button onClick={() => handleDelete(e.id)} style={{ height: 20, backgroundColor: "red"}}>x</button><br /></div>))}
          </div>


        </div>
      </main>
    </>
  )
}

export async function getServerSideProps(context: any) {
  const ambientes = await db.getAmbientes()
  console.log(context.req.body)
  if (context.query.nome && context.query.nome.length > 0) {
    console.log(context.query.nome)
    console.log('context.query.nome')
    // await db.setAmbiente(context.query.nome)
  }
  // const ambientesClass = await DB.getAmbientes()

  return {
    props: { ambientes }, // will be passed to the page component as props
  }
}