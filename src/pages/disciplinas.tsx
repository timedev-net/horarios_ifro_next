import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import { db } from '../services/database'
import { DB } from '../services/databaseClass'
import { useEffect, useState } from 'react'
import { useRouter } from 'next/router'


const inter = Inter({ subsets: ['latin'] })

export default function Disciplinas(props: any) {
  const router = useRouter()
  const [disciplinas, setDisciplinas] = useState(props.disciplinas)
  const [inputName, setInputName] = useState('')

  useEffect(() => {
    console.log(router.query)
    setDisciplinas(props.disciplinas)
    return () => {
      router.query = {}
    }
  }, [])

  return disciplinas && (
    <>
      <Head>
        <title>Disciplinas - IFRO</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>

        <div className={styles.center}>
          <Image className={styles.logo} src="/ifro.png" alt="Logo Ifro" width={250} height={220} />
        </div>
        <h1 className={inter.className}>Disciplinas</h1>



        <div>
          <form action="/disciplinas" method="post">
            Nome da Disciplina: <input value={inputName} onChange={(e) => setInputName(e.target.value)} type="text" name="nome" className={`${styles.inputText} ${inter.className}`} /> <input type="submit" value="Salvar" className={styles.btn} />
          </form>
          <div style={{margin:20}}>
            {disciplinas.map((e: any, i: number) => (<div key={i}><h1>{e.id} - {e.nome}</h1><br /></div>))}
          </div>


        </div>
      </main>
    </>
  )
}

export async function getServerSideProps(context: any) {
  const disciplinas = await db.getDisciplinas()
  console.log(context.req.body)
  if (context.query.nome && context.query.nome.length > 0) {
    console.log(context.query.nome)
    console.log('context.query.nome')
    // await db.setDisciplina(context.query.nome)
  }
  // const disciplinasClass = await DB.getDisciplinas()

  return {
    props: { disciplinas }, // will be passed to the page component as props
  }
}